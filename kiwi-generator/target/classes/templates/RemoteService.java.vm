/*
 * Copyright [2019~2025] [codingByFeng]
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package ${package}.${moduleName}.feign;

import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import com.vocabulary.enhancer.common.core.util.R;
import ${package}.${moduleName}.entity.${className};
import ${package}.${moduleName}.feign.factory.Remote${caseTableName}ServiceFallbackFactory;
import org.springframework.cloud.openfeign.FeignClient;
import org.springframework.web.bind.annotation.*;


/**
 * ${comments}
 *
 * @author ${author}
 * @date ${datetime}
 */
@FeignClient(contextId = "remote${caseTableName}Service", value = "${serviceId}", fallbackFactory = Remote${caseTableName}ServiceFallbackFactory.class)
public interface IRemote${caseTableName}Service {

    String ${tableNameUpper} = '/${controllerRootPath}';

    /*
     * 分页查询
     */
    @GetMapping(${tableNameUpper} + "/page")
    R get${caseTableName}Page(Page page, ${className} ${classname});

    /*
     * 根据条件查询单个实体
     */
    @PostMapping(${tableNameUpper} + "/getOne")
    R getOne(@RequestBody ${className} condition);

    /*
     * 通过id查询${comments}
     */
    @GetMapping(${tableNameUpper} + "/{${pk.lowerAttrName}}")
    R getById(@PathVariable("${pk.lowerAttrName}") ${pk.attrType} ${pk.lowerAttrName});

    /*
     * 新增
     */
    @PostMapping(${tableNameUpper} + "/save")
    R save(@RequestBody ${className} ${classname});

    /*
     * 修改
     */
    @PutMapping(${tableNameUpper} + "/updateById")
    R updateById(@RequestBody ${className} ${classname});

    /*
     * 通过id删除
     */
    @DeleteMapping(${tableNameUpper} + "/${pk.lowerAttrName}}")
    R removeById(@PathVariable ${pk.attrType} ${pk.lowerAttrName});
}
