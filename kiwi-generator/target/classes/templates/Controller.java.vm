/*
 * Copyright [2019~2025] [codingByFeng]
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package ${package}.${moduleName}.controller;

import com.baomidou.mybatisplus.core.toolkit.Wrappers;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import com.vocabulary.enhancer.common.core.util.R;
import SysLog;
import ${package}.${moduleName}.entity.${className};
import ${package}.${moduleName}.service.I${caseTableName}Service;
import org.springframework.security.access.prepost.PreAuthorize;
import lombok.AllArgsConstructor;
import org.springframework.web.bind.annotation.*;


/**
 * ${comments}
 *
 * @author ${author}
 * @date ${datetime}
 */
@RestController
@AllArgsConstructor
@RequestMapping("/${controllerRootPath}")
public class ${caseTableName}Controller {

    private final I${caseTableName}Service ${className}Service;

    /**
     * 分页查询
     * @param page 分页对象
     * @param ${classname} ${comments}
     * @return
     */
    @GetMapping("/page")
    public R get${caseTableName}Page(Page page, ${className} ${classname}) {
        return R.ok(${caseTableName}Service.page(page, Wrappers.query(${classname})));
    }

    /**
     * 根据条件查询单个实体
     * @param condition
     * @return
     */
    @PostMapping("/getOne")
    public R getOne(@RequestBody ${className} condition) {
        return R.ok(${caseTableName}Service.getOne(new QueryWrapper<>(condition)));
    }


    /**
     * 通过id查询${comments}
     * @param ${pk.lowerAttrName} id
     * @return R
     */
    @GetMapping("/getById/{${pk.lowerAttrName}}")
    public R getById(@PathVariable("${pk.lowerAttrName}") ${pk.attrType} ${pk.lowerAttrName}) {
        return R.ok(${caseTableName}Service.getById(${pk.lowerAttrName}));
    }

    /**
     * 新增${comments}
     * @param ${classname} ${comments}
     * @return R
     */
    @SysLog("新增${comments}")
    @PostMapping("/save")
    @PreAuthorize("@pms.hasPermission('${moduleName}_${pathName}_add')")
    public R save(@RequestBody ${className} ${classname}) {
        return R.ok(${caseTableName}Service.save(${classname}));
    }

    /**
     * 修改${comments}
     * @param ${classname} ${comments}
     * @return R
     */
    @SysLog("修改${comments}")
    @PutMapping("/updateById")
    @PreAuthorize("@pms.hasPermission('${moduleName}_${pathName}_edit')")
    public R updateById(@RequestBody ${className} ${classname}) {
        return R.ok(${caseTableName}Service.updateById(${classname}));
    }

    /**
     * 通过id删除${comments}
     * @param ${pk.lowerAttrName} id
     * @return R
     */
    @SysLog("通过id删除${comments}")
    @DeleteMapping("/{${pk.lowerAttrName}}")
    @PreAuthorize("@pms.hasPermission('${moduleName}_${pathName}_del')")
    public R removeById(@PathVariable ${pk.attrType} ${pk.lowerAttrName}) {
        return R.ok(${caseTableName}Service.removeById(${pk.lowerAttrName}));
    }
}
