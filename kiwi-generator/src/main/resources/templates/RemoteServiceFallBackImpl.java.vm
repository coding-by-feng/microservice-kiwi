/*
 * Copyright [2019~2025] [codingByFeng]
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package ${package}.${moduleName}.feign.fallback;

import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import com.vocabulary.enhancer.common.core.util.R;
import ${package}.${moduleName}.entity.${className};
import ${package}.${moduleName}.feign.IRemote${caseTableName}Service;
import lombok.Setter;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Component;


/**
 * ${comments}
 *
 * @author ${author}
 * @date ${datetime}
 */
@Slf4j
@Component
public class Remote${caseTableName}ServiceFallbackImpl implements IRemote${caseTableName}Service {

    @Setter
    private Throwable throwable;

    @Override
    public R get${caseTableName}Page(Page page, ${className} ${classname}) {
        log.error("get${caseTableName}Page error, ${classname}=" + ${classname}, throwable);
        return null;
    }

    @Override
    public R getOne(${className} condition) {
        log.error("getOne error, ${classname}=" + condition, throwable);
        return null;
    }

    @Override
    public R getById(${pk.attrType} ${pk.lowerAttrName}) {
        log.error("getById error, ${pk.lowerAttrName}=" + ${pk.lowerAttrName}, throwable);
        return null;
    }

    @Override
    public R save(${className} ${className}) {
        log.error("save error, ${className}=" + ${className}, throwable);
        return null;
    }

    @Override
    public R updateById(${className} ${classname}) {
        log.error("updateById error, ${className}=" + ${classname}, throwable);
        return null;
    }

    @Override
    public R removeById(${pk.attrType} ${pk.lowerAttrName}) {
        log.error("removeById error, ${pk.lowerAttrName}=" + ${pk.lowerAttrName}, throwable);
        return null;
    }
}

