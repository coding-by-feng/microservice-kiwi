/*
 * Copyright [2019~2025] [codingByFeng]
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package ${package}.${moduleName}.entity;

import com.baomidou.mybatisplus.annotation.TableId;
import com.baomidou.mybatisplus.annotation.TableName;
import com.baomidou.mybatisplus.extension.activerecord.Model;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.experimental.Accessors;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import javax.validation.constraints.NotBlank;
import javax.validation.constraints.NotNull;

import me.fengorz.kiwi.common.api.valid.ValidTypeInsert;
import me.fengorz.kiwi.common.api.valid.ValidTypeUpdate;

import java.time.LocalDateTime;
#if(${hasBigDecimal})
import java.math.BigDecimal;
#end

/**
 * ${comments}
 *
 * @author ${author}
 * @date ${datetime}
 */
@Data
@ApiModel
@EqualsAndHashCode(callSuper = true)
@TableName("${tableName}")
@Accessors(chain = true)
public class ${className}DO extends Model<${classNameDO}> {

    private static final long serialVersionUID=${serialVersionUID}L;

    #foreach ($column in $columns)
        /**
         * $column.comments
         */
        #if($column.columnName == $pk.columnName)
        @TableId
        @ApiModelProperty("主键id，编辑时必须传")
        #else
        @ApiModelProperty("$column.comments")
        #end
        #if($column.columnName == $pk.columnName)
        @NotNull(groups = {ValidTypeUpdate.class})
        #else
            #if($column.isNullable == "NO" && !$column.columnDefault)
                #if($column.attrType == "String")
                @NotBlank(groups = {ValidTypeInsert.class})
                #else
                @NotNull(groups = {ValidTypeInsert.class})
                #end
            #end
        #end
    private $column.attrType $column.lowerAttrName;

    #end

}
